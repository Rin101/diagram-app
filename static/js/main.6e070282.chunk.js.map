{"version":3,"sources":["general.js","layout-diagram.js","diagram.js","settings-ind.js","settings.js","main.js","index.js"],"names":["notes","commonTunings","scales","getScale","scale","key","res","startIndex","indexOf","nums","num","push","getStringNotes","root","rootIndex","i","tmp","getDiagram","guitar","selectedNotes","string","stringObj","note","includes","reverse","Note","props","noteBox","useRef","useEffect","current","querySelector","className","stringNum","style","top","noteNum","width","display","height","ref","onClick","tmpDiagram","diagram","noteInDiagram","setDiagram","console","log","toggleNote","String","length","displayNotes","FretNum","p","left","FretNumbers","map","Diagram","diagramObj","Guitar","Select","selector","selectorItems","hideMenu","classList","remove","contains","add","title","currentValue","mapSelectors","items","setItem","changeDiagram","SelectorTuningItem","item","tuning","value","setTuning","setMenu","mapTuningSelectors","SelectorScaleItem","setScale","mapScaleSelectors","SelectorRootItem","setRoot","mapRootSelectors","Settings","scaleName","setSelectedNotes","Main","useState","roots","getNotes","setDiagramObj","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e070282.chunk.js","sourcesContent":["const notes = [\r\n    \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\",\r\n    \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"\r\n]\r\n\r\nexport const commonTunings = {\r\n    \"standard\": [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"],\r\n    \"half-step-down\": [\"D#\", \"G#\", \"C#\", \"F#\", \"A#\", \"D#\"],\r\n    \"drop-D\": [\"D\", \"A\", \"D\", \"G\", \"B\", \"E\"],\r\n    \"dadgad\": [\"D\", \"A\", \"D\", \"G\", \"A\", \"D\"],\r\n}\r\n\r\nconst scales = {\r\n    \"major\": [0, 2, 4, 5, 7, 9, 11],\r\n    \"minor\": [0, 2, 3, 5, 7, 8, 10],\r\n    \"majorPentatonic\": [0, 2, 4, 7, 9],\r\n    \"minorPentatonic\": [0, 3, 5, 7, 10],\r\n    \"harmonicMinor\": [0, 2, 3, 5, 7, 8, 11],\r\n    \"harmonicMajor\": [0, 2, 4, 5, 7, 8, 11]\r\n}\r\n\r\nexport function getScale(scale, key) {\r\n    let res = []\r\n    let startIndex = notes.indexOf(key)\r\n    let nums = [...scales[scale]]\r\n    for (let num of nums) {\r\n        res.push(notes[startIndex+num])\r\n    }\r\n    return res\r\n    // [root, note, note, note]\r\n}\r\n\r\nconst getStringNotes = (root) => {\r\n    let res = []\r\n    const rootIndex = notes.indexOf(root)\r\n    for (let i=0; i<12; i++) {\r\n        res.push(notes[rootIndex + i])\r\n    }\r\n    let tmp = [...res]\r\n    for (let i of tmp) {\r\n        res.push(i)\r\n    }\r\n    // third octabes\r\n    // for (let i of tmp) {\r\n        // res.push(i)\r\n    // }\r\n    return res\r\n    // [root, note, note, note]\r\n}\r\n\r\nexport const getNotes = (roots) => {\r\n    let res = []\r\n    for (let root of roots) {\r\n        res.push(getStringNotes(root))\r\n    }\r\n    return res\r\n    // [\r\n    //  [note, note, note], [note, note, note], \r\n    // ]\r\n}\r\n\r\nexport const getDiagram = (guitar, selectedNotes, root) => {\r\n\r\n    let res = []\r\n\r\n    for (let string of guitar) {\r\n        let stringObj = []\r\n        for(let note of string) {\r\n            if (note === root) {\r\n                stringObj.push([note, \"root\"])\r\n            } else if (selectedNotes.includes(note)) {\r\n                stringObj.push([note, \"normal\"])\r\n            } else {\r\n                stringObj.push([note, \"none\"])\r\n            }\r\n        }\r\n        res.push(stringObj)\r\n    }\r\n\r\n    // returns {\"diagram\":[[]], \"root\":\"\"}\r\n    return {\"diagram\": res.reverse(), \"root\": root}\r\n}\r\n\r\n// export const getDiagram = (notes, scale) => {\r\n//     let res = []\r\n//     for (let string of notes) {\r\n//         let stringObj = []\r\n//         for (let note of string) {\r\n//             if (note === scale[0]) {\r\n//                 stringObj.push([note, \"root\"])\r\n//             } else if (scale.includes(note)) {\r\n//                 stringObj.push([note, \"normal\"])\r\n//             } else {\r\n//                 stringObj.push([note, \"none\"])\r\n//             }\r\n//         }\r\n//         res.push(stringObj)\r\n//     }\r\n//     return res.reverse()\r\n//     // [\r\n//     //  [[note, diagramStyle], [note, diagramStyle]], [[], []], [[], []]\r\n//     // ]\r\n// }","import { useEffect, useRef, useState } from \"react\"\r\n\r\nfunction Note (props) {\r\n    const noteBox = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const note = noteBox.current.querySelector(\".note\")\r\n\r\n        switch (props.note[1]) {\r\n            case \"none\":\r\n                note.className = \"note note-none\"\r\n                break;\r\n            case \"normal\":\r\n                note.className = \"note note-normal\"\r\n                break;\r\n            case \"root\":\r\n                note.className = \"note note-root\"\r\n                break;\r\n            default:\r\n                note.className = \"note note-none\"\r\n                break;\r\n        }\r\n\r\n        // clear edge border\r\n        if (props.stringNum === 0) {\r\n            noteBox.current.querySelector('.note-right-border').style.top = \"50%\"\r\n            noteBox.current.querySelector('.note-left-border').style.top = \"50%\"\r\n        } else if (props.stringNum === 5) {\r\n            noteBox.current.querySelector('.note-right-border').style.top = \"-50%\"\r\n            noteBox.current.querySelector('.note-left-border').style.top = \"-50%\"\r\n        }\r\n\r\n        // draw head and open string\r\n        if (props.noteNum === 1) {\r\n            noteBox.current.style.width = 38 + 10 + \"px\"\r\n            noteBox.current.querySelector('.note-left-border').style.width = \"10px\"\r\n        } else if (props.noteNum === 0) {\r\n            noteBox.current.querySelector('.note-right-border').style.display = \"none\"\r\n            noteBox.current.querySelector('.note-left-border').style.display = \"none\"\r\n            note.style.height = \"13px\"\r\n            note.style.width = \"13px\"\r\n        } \r\n    })\r\n\r\n    const toggleNote = () => {\r\n        // const isNotShowing = noteBox.current.querySelector(\".note\").classList.contains(\"note-none\")\r\n        // if (isNotShowing) {   \r\n        // }\r\n        let tmpDiagram = [...props.diagram]\r\n        let noteInDiagram = tmpDiagram[props.stringNum][props.noteNum]\r\n        switch (noteInDiagram[1]) {\r\n            case \"none\":\r\n                if (noteInDiagram[1] === props.root) {\r\n                    noteInDiagram[1] = \"root\"\r\n                } else {\r\n                    noteInDiagram[1] = \"normal\"\r\n                }\r\n                break;\r\n            default:\r\n                noteInDiagram[1] = \"none\"\r\n        }\r\n\r\n        props.setDiagram(tmpDiagram)\r\n        console.log(noteInDiagram)\r\n    }\r\n    \r\n    return (\r\n        <div ref={noteBox} className=\"note-box\" onClick={() => toggleNote()}>\r\n            <div className=\"note\"></div>\r\n            <div className=\"note-right-border\"></div>\r\n            <div className=\"note-left-border\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const String = (props) => {\r\n\r\n    const displayNotes = () => {\r\n        let res = []\r\n        for (let i=0; i<props.notes.length; i++) {\r\n            const note = props.notes[i]\r\n            const key = note + i + props.stringNum\r\n            res.push(<Note diagram={props.diagram} setDiagram={props.setDiagram} root={props.root} note={note} stringNum={props.stringNum} noteNum={i} key={key}></Note>)\r\n        }\r\n        return res\r\n    }\r\n\r\n    return (\r\n        <div className=\"string-container\">\r\n            { displayNotes() }\r\n            <div className=\"string\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FretNum = (props) => {\r\n\r\n    const p = useRef()\r\n\r\n    useEffect(() => {\r\n        p.current.style.left = (38 + 38 + 10 + 38*(props.num-1) - 19) + \"px\"\r\n    })\r\n\r\n    return (\r\n        <p className=\"fretNum\" ref={p}>{ props.num }</p>\r\n    )\r\n}\r\n\r\nexport const FretNumbers = () => {\r\n\r\n    const fretNums = [3, 5, 7, 9, 12, 15, 17, 19, 21, 23]\r\n\r\n    return (\r\n        <div className=\"fret-numbers\">\r\n            {fretNums.map(num => <FretNum num={num} key={num}></FretNum>)}\r\n        </div>\r\n    )\r\n}","import { useRef, useState } from \"react\"\r\nimport { getDiagram } from \"./general\"\r\nimport \"./css/diagram.css\"\r\nimport { FretNumbers, String } from \"./layout-diagram\"\r\n\r\nexport const Diagram = (props) => {\r\n    \r\n    let diagram = props.diagramObj[\"diagram\"]\r\n    const root = props.diagramObj[\"root\"]\r\n\r\n\r\n    const Guitar = () => {\r\n        let res = []\r\n        for (let string of diagram) {\r\n            const stringNum = diagram.indexOf(string)\r\n            res.push(<String diagram={diagram} setDiagram={props.setDiagram} root={root} notes={string} stringNum={stringNum} key={stringNum}></String>)\r\n        }\r\n\r\n        console.log(\"diagram\", diagram)\r\n        return res\r\n    }\r\n\r\n    return(\r\n        <div className=\"diagram\">\r\n            <Guitar></Guitar>\r\n            <FretNumbers></FretNumbers>\r\n        </div>\r\n    )\r\n}","import { useEffect, useRef } from \"react\"\r\nimport { commonTunings, getDiagram, getNotes, getScale } from \"./general\"\r\n\r\n\r\nexport const Select = (props) => {\r\n    const selector = useRef()\r\n    const selectorItems = useRef()\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [selectorItems])\r\n\r\n    const hideMenu = () => {\r\n        selectorItems.current.classList.remove(\"showing\")\r\n        console.log(\"asdfghgdfdds\", selectorItems.current.style.display)\r\n        selectorItems.current.style.display = \"none\"\r\n        console.log(\"kjdkjsodxj\", selectorItems.current)\r\n        console.log(\"asdfghgdfdds\", selectorItems.current.style.display)\r\n    }\r\n    const toggleMenu = () => {\r\n        const isShowing = selectorItems.current.classList.contains(\"showing\")\r\n        if (isShowing) {\r\n            hideMenu()\r\n        } else {\r\n            selectorItems.current.classList.add('showing')\r\n            selectorItems.current.style.display = \"block\"\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"select-menu select-tuning\" ref={selector} onClick={() => toggleMenu()}>\r\n            <p className=\"label\">{props.title}: </p>\r\n            <div>\r\n                <p className=\"current-item\">{props.currentValue} <i className=\"fas fa-caret-down\"></i></p>\r\n                <div className=\"selector-items\" ref={selectorItems}>\r\n                    {/* { mapScaleSelectors(props.items, props.setScale, hideMenu) } */}\r\n                    { props.mapSelectors(props.items, props.setItem, props.changeDiagram, hideMenu) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// ================================\r\n\r\nconst SelectorTuningItem = (props) => {\r\n    const item = useRef()\r\n    const setMenu = () => {\r\n        const tuning = commonTunings[props.value]\r\n        props.setTuning(tuning)\r\n        props.changeDiagram()\r\n        props.hideMenu()\r\n    }\r\n    return(\r\n        <div className=\"selector-item\" ref={item} onClick={() => setMenu()}><p>{props.title}</p></div>\r\n    )\r\n}\r\n\r\nexport const mapTuningSelectors = (items, setTuning, changeDiagram, hideMenu) => {\r\n    //  item : [title, value] \r\n    return items.map(item => <SelectorTuningItem title={item[0]} value={item[1]} setTuning={setTuning} changeDiagram={changeDiagram} hideMenu={hideMenu} key={item}></SelectorTuningItem>)\r\n}\r\n\r\n// ==============================\r\n\r\nconst SelectorScaleItem = (props) => {\r\n    const item = useRef()\r\n    const setMenu = () => {\r\n        props.setScale(props.value)\r\n        props.changeDiagram()\r\n        props.hideMenu()\r\n    }\r\n    return(\r\n        <div className=\"selector-item\" ref={item} onClick={() => setMenu()}><p>{props.title}</p></div>\r\n    )\r\n}\r\n\r\nexport const mapScaleSelectors = (items, setScale, hideMenu) => {\r\n    //  item : [title, value] \r\n    return items.map(item => <SelectorScaleItem title={item[0]} value={item[1]} setScale={setScale} hideMenu={hideMenu} key={item}></SelectorScaleItem>)\r\n}\r\n\r\n// ===============================\r\n\r\nconst SelectorRootItem = (props) => {\r\n    const item = useRef()\r\n    const setMenu = () => {\r\n        props.setRoot(props.value)\r\n        props.changeDiagram()\r\n        props.hideMenu()\r\n    }\r\n    return(\r\n        <div className=\"selector-item\" ref={item} onClick={() => setMenu()}><p>{props.title}</p></div>\r\n    )\r\n}\r\n\r\nexport const mapRootSelectors = (items, setRoot, hideMenu) => {\r\n    //  item : [title, value] \r\n    return items.map(item => <SelectorRootItem title={item} value={item} setRoot={setRoot} hideMenu={hideMenu} key={item}></SelectorRootItem>)\r\n}","import { useRef } from \"react\"\r\nimport \"./css/settings.css\"\r\nimport { getScale } from \"./general\"\r\nimport { mapRootSelectors, mapScaleSelectors, mapTuningSelectors, Select, SelectTuning } from \"./settings-ind\"\r\n\r\n\r\nexport function Settings (props) {\r\n\r\n    // (guitar, selecedNotes, root)\r\n    // const changeDiagram = props.changeDiagram\r\n\r\n    const tuning = props.tuning\r\n    const tuningItems = [\r\n        [\"standard\", \"standard\"], [\"half step down\", \"half-step-down\"], \r\n        [\"drop D\", \"drop-D\"], [\"DADGAD\", \"dadgad\"], [\"custom\", \"custom\"]\r\n    ]\r\n    const setTuning = props.setTuning\r\n\r\n    const scaleName = props.selectedNotes[\"scaleName\"]\r\n    const scaleItems = [\r\n        [\"Minor Pentatonic\", \"minorPentatonic\"], [\"Major Pentatonic\", \"majorPentatonic\"],\r\n        [\"Minor\", \"minor\"], [\"Major\", \"major\"], [\"Harmonic Minor\", \"harmonicMinor\"], [\"Harmonic Major\", \"harmonicMajor\"]\r\n    ]\r\n    const setScale = (scaleName, root=props.root) => {\r\n        props.setSelectedNotes({\"notes\": getScale(scaleName, root),\"scaleName\":scaleName})\r\n    }\r\n\r\n    const root = props.root\r\n    const rootItems = [\"C\", \"C#\", \"D\" ,\"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"]\r\n    const setRootNote = (value) => {\r\n        props.setRoot(value)\r\n        if (scaleName !== \"custom\") {\r\n            setScale(scaleName, value)\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"settings\">\r\n            <Select changeDiagram={props.changeDiagram} title={\"Tuning\"} currentValue={tuning} items={tuningItems} setItem={setTuning} mapSelectors={mapTuningSelectors}></Select>\r\n            <Select changeDiagram={props.changeDiagram} title={\"Scale\"} currentValue={scaleName} items={scaleItems} setItem={setScale} mapSelectors={mapScaleSelectors}></Select>\r\n            <Select changeDiagram={props.changeDiagram} title={\"Root\"} currentValue={root} items={rootItems} setItem={setRootNote} mapSelectors={mapRootSelectors}></Select>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Diagram } from \"./diagram\";\r\nimport { commonTunings, getDiagram, getNotes, getScale } from \"./general\";\r\nimport { Settings } from \"./settings\";\r\n\r\nexport function Main () {\r\n    \r\n    const [tuning, setTuning] = useState(commonTunings[\"standard\"]) \r\n    const [root, setRoot] = useState('E')\r\n    const [selectedNotes, setSelectedNotes] = useState({\r\n            \"notes\": getScale(\"minorPentatonic\", root),\r\n            \"scaleName\": \"minorPentatonic\"\r\n        })\r\n\r\n    let guitar = getNotes(tuning)\r\n    // {\"diagram\": [[]], \"root\":\"\"}\r\n    // let diagramObj = getDiagram(guitar, selectedNotes[\"notes\"], root)\r\n    \r\n    const [diagramObj, setDiagramObj] = useState(getDiagram(guitar, selectedNotes[\"notes\"], root))\r\n    \r\n    const changeDiagram = (guitar=guitar, selectedNotes=selectedNotes[\"notes\"], root=root) => {\r\n        setDiagramObj(getDiagram(guitar, selectedNotes, root))\r\n    }\r\n\r\n    const setDiagram = (diagram) => {\r\n        setDiagramObj({\"diagram\": diagram, \"root\": root})\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Settings selectedNotes={selectedNotes} setSelectedNotes={setSelectedNotes} root={root} setRoot={setRoot} tuning={tuning} setTuning={setTuning} changeDiagram={changeDiagram}></Settings>\r\n            <Diagram diagramObj={diagramObj} setDiagram={setDiagram}></Diagram>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport { Main } from './main';\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div className=\"app\">\n        <Main></Main>\n      </div>\n    )\n  }\n}\n\n// ========================================\n// ====  USE STRICTMODE?     ======================\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n"],"sourceRoot":""}